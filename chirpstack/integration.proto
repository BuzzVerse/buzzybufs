syntax = "proto3";

option java_package = "dev.buzzverse.buzzcore";
option java_outer_classname = "BuzzVerse_V1_Chirpstack";

message UplinkEvent {
  // Deduplication ID (UUID).
  string deduplication_id = 1;

  // Timestamp.
  //google.protobuf.Timestamp time = 2;

  // Device information.
  DeviceInfo device_info = 3;

  // Device address.
  string dev_addr = 4;

  // Device has ADR bit set.
  bool adr = 5;

  // Data-rate.
  uint32 dr = 6;

  // Frame counter.
  uint32 f_cnt = 7;

  // Frame port.
  uint32 f_port = 8;

  // Uplink was of type confirmed.
  bool confirmed = 9;

  // FRMPayload data.
  bytes data = 10;

  // Receiving gateway RX info.
  repeated UplinkRxInfo rx_info = 12;

  // TX info.
  UplinkTxInfo tx_info = 13;

  // Relay info.
  UplinkRelayRxInfo relay_rx_info = 14;

  // Region config ID.
  // This contains the region config ID which reported the uplink.
  string region_config_id = 16;
}

message StatusEvent {
  // Deduplication ID (UUID).
  string deduplication_id = 1;

  // Timestamp.
  //google.protobuf.Timestamp time = 2;

  // Device info.
  DeviceInfo device_info = 3;

  // The demodulation signal-to-noise ratio in dB for the last successfully
  // received device-status request by the Network Server.
  int32 margin = 5;

  // Device is connected to an external power source.
  bool external_power_source = 6;

  // Battery level is not available.
  bool battery_level_unavailable = 7;

  // Battery level.
  float battery_level = 8;
}

message DeviceInfo {
  // Tenant ID (UUID).
  string tenant_id = 1;

  // Tenant name.
  string tenant_name = 2;

  // Application ID (UUID).
  string application_id = 3;

  // Application name.
  string application_name = 4;

  // Device-profile ID (UUID).
  string device_profile_id = 5;

  // Device-profile name.
  string device_profile_name = 6;

  // Device name.
  string device_name = 7;

  // Device EUI.
  string dev_eui = 8;

  // Device-profile and device tags.
  map<string, string> tags = 9;
}

message UplinkRelayRxInfo {
  // Relay DevEUI.
  string dev_eui = 1;

  // Frequency.
  uint32 frequency = 2;

  // Data-rate.
  uint32 dr = 3;

  // SNR.
  int32 snr = 4;

  // RSSI.
  int32 rssi = 5;

  // WOR channel.
  uint32 wor_channel = 6;
}

message UplinkRxInfo {
  // Gateway ID.
  string gateway_id = 1;

  // Uplink ID.
  uint32 uplink_id = 2;

  // RSSI.
  int32 rssi = 6;

  // SNR.
  // Note: only available for LoRa modulation.
  float snr = 7;

  // Channel.
  uint32 channel = 8;

  // RF chain.
  uint32 rf_chain = 9;

  // Board.
  uint32 board = 10;

  // Antenna.
  uint32 antenna = 11;

  // Location.
  Location location = 12;

  // Gateway specific context.
  // This value must be returned to the gateway on (Class-A) downlink.
  bytes context = 13;

  // Additional gateway meta-data.
  map<string, string> metadata = 15;

  // CRC status.
  CRCStatus crc_status = 16;
}

message UplinkTxInfo {
  // Frequency (Hz).
  uint32 frequency = 1;
}

enum CRCStatus {
  // No CRC.
  NO_CRC = 0;

  // Bad CRC.
  BAD_CRC = 1;

  // CRC OK.
  CRC_OK = 2;
}

message Location {
  // Latitude.
  double latitude = 1;

  // Longitude.
  double longitude = 2;

  // Altitude.
  double altitude = 3;

  // Location source.
  LocationSource source = 4;

  // Accuracy.
  float accuracy = 5;
}

enum LocationSource {
  // Unknown.
  UNKNOWN = 0;

  // GPS.
  GPS = 1;

  // Manually configured.
  CONFIG = 2;

  // Geo resolver (TDOA).
  GEO_RESOLVER_TDOA = 3;

  // Geo resolver (RSSI).
  GEO_RESOLVER_RSSI = 4;

  // Geo resolver (GNSS).
  GEO_RESOLVER_GNSS = 5;

  // Geo resolver (WIFI).
  GEO_RESOLVER_WIFI = 6;
}